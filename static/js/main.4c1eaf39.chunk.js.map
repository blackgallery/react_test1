{"version":3,"sources":["assets/images/about.jpg","components/AboutContent.js","Home.js","About.js","Service.js","Contact.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutContent","className","src","aboutImg","alt","Home","About","Service","Contact","Navbar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,0KC2C5BC,EAxCM,WACnB,OAED,6BAASC,UAAU,iBACZ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACX,yBAAKC,IAAKC,IAAUC,IAAI,YAGhC,yBAAKH,UAAU,sBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,qBACV,yBAAKA,UAAU,gCACZ,qEACA,qFAEJ,yBAAKA,UAAU,cACX,gDACC,0OAEL,yBAAKA,UAAU,cACX,iDACC,iPCblBI,EATF,WACX,OACE,yBAAKJ,UAAU,aAEX,kBAAC,EAAD,QCKOK,EAXD,WACZ,OACE,oCACE,4CCMSC,EAVC,WACd,OACE,oCACE,8CCOSC,EAVC,WACd,OACE,oCACE,8C,OCqCSC,EAvCA,WACb,OACE,oCACA,yBAAKR,UAAU,6BACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,kBAGZ,yBAAKA,UAAU,iDACZ,kBAAC,IAAD,CAASA,UAAU,eAAeS,GAAG,KAArC,UACA,4BAAQT,UAAU,iBAAiBU,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAMf,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BgB,GAAG,0BAC3C,wBAAIhB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASiB,OAAK,EAACjB,UAAU,WAAWS,GAAG,KAAvC,SAEF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWS,GAAG,UAAjC,UAEF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWS,GAAG,YAAjC,YAEF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWS,GAAG,YAAjC,oB,OCEDS,EArBH,WACV,OAEI,oCAEA,kBAAC,IAAD,KACA,kBAAC,EAAD,MACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOa,OAAK,EAACE,KAAK,SAASC,UAAWf,IACtC,kBAAC,IAAD,CAAOY,OAAK,EAACE,KAAK,WAAWC,UAAWd,IACxC,kBAAC,IAAD,CAAOW,OAAK,EAACE,KAAK,WAAWC,UAAYb,IACzC,kBAAC,IAAD,CAAUE,GAAG,UCVLY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4c1eaf39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.d8a6563e.jpg\";","import React from \"react\"; \r\nimport aboutImg from \"../assets/images/about.jpg\"; \r\n\r\nconst AboutContent = () => {\r\n  return (\r\n \r\n\t<section className=\"about-section\">\r\n        <div className=\"container\"> \r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-sm-12\">\r\n                    <div className=\"about_img\"> \r\n                        <img src={aboutImg} alt=\"about\" /> \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-12\">\r\n                    <div className=\"about_item_tb\">\r\n                        <div className=\"about_item_tbcell\">\r\n                             <div className=\"base-header base_header_left\">\r\n                                <small>Welcome To Our Fuodborne Farms aaa</small>\r\n                                <h3>Organic Food - Farm Fresh Produce Right to Your Door</h3>\r\n                             </div>\r\n                            <div className=\"about_item\">\r\n                                <h4>Natural Products</h4>\r\n                                 <p>Organically grown crops tend to use natural fertilizers like manure to improve plant growth. Animals raised organically are also not given antibiotic organic  hormones  most commonly purchased organic .</p>\r\n                            </div>\r\n                            <div className=\"about_item\">\r\n                                <h4>Wheat Cultivation</h4>\r\n                                 <p>Organically grown crops tend to use natural fertilizers like manure to improve plant growth. Animals raised organically are also not given antibiotic organic  hormones  most commonly purchased organic .</p> \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*about_wrp*/}\r\n            </div>\r\n            {/* row */}\r\n        </div>\r\n        {/* container */}\r\n    </section>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default AboutContent;\r\n","import React from 'react'; \r\n \r\nimport AboutContent from './components/AboutContent';\r\n \r\n\r\nconst Home = () => { \r\n  return(\r\n    <div className=\"home-page\">  \r\n \r\n        <AboutContent /> \r\n    </div>    \r\n  )\r\n};\r\n\r\nexport default Home;","import React from 'react'; \r\n \r\n\r\nconst About = () => {\r\n  return(\r\n    <>\r\n      <h1>\r\n        About Page\r\n      </h1>\r\n     \r\n    </ >\r\n  )\r\n};\r\n\r\nexport default About;","import React from 'react'; \r\n\r\nconst Service = () => {\r\n  return(\r\n    <>\r\n      <h1>\r\n      Service Page\r\n      </h1>\r\n    </ >\r\n  )\r\n};\r\n\r\nexport default Service;","import React from 'react'; \r\n\r\nconst Contact = () => {\r\n  return(\r\n    <>\r\n      <h1>\r\n      Contact Page\r\n      </h1>\r\n    </ >\r\n  )\r\n};\r\n\r\nexport default Contact;","import React from 'react'; \r\nimport { NavLink } from 'react-router-dom'; \r\n\r\nconst Navbar = () => {\r\n  return(\r\n    <>\r\n    <div className=\"container-fluid navbar_bg\">\r\n    <div className=\"row\">\r\n    <div className=\"col-10 mx-auto\">\r\n\r\n\r\n       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavLink exact className=\"nav-link\" to=\"/\">Home</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/service\">Service</NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </nav>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </ >\r\n  )\r\n};\r\n\r\nexport default Navbar;","import React from 'react'; \nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Home from './Home'; \nimport About from './About'; \nimport Service from './Service'; \nimport Contact from './Contact'; \nimport Navbar from './Navbar'; \nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nconst App = () => {\n  return(\n  \n      <>\n     \n      <BrowserRouter>\n      <Navbar/>\n        <Switch>\n            <Route exact path=\"/\" component={Home} /> \n            <Route exact path=\"/about\" component={About} /> \n            <Route exact path=\"/service\" component={Service} />  \n            <Route exact path=\"/contact\" component= {Contact} />\n            <Redirect to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n\n      </> \n\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}